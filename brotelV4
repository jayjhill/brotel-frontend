#include <JsonParserGeneratorRK.h>
#include <Adafruit_IO_Particle.h>
#include "Adafruit_IO_Client.h"
#include <adafruit-sht31.h>

#define AIO_KEY ""       // Adafruit IO AIO Key
TCPClient client;                                        // TCP Client used by Adafruit IO library

Adafruit_SHT31 sht31 = Adafruit_SHT31();

// Create the AIO client object
Adafruit_IO_Client  AIOClient = Adafruit_IO_Client(client, AIO_KEY);
 
// Create a feed object to send and get data
Adafruit_IO_Feed    testFeed = AIOClient.getFeed("truckerShowersnowDepth");
Adafruit_IO_Feed    tempFeed = AIOClient.getFeed("temperature");
Adafruit_IO_Feed    humFeed = AIOClient.getFeed("humidity");


const int tankPin = A4;

const int tankPower = 13;
long anVolt1;
int TankDist;
int snowDepth;
int setMeasure = 134;
int temp;
int tempF;
int humidity;


void setup() {
  //This opens up a serial connection to shoot the results back to the PC console
  Serial.begin(9600);
  pinMode(tankPower, OUTPUT);
  delay(200); //Gives time for the sensors to boot and calibrate
      AIOClient.begin();
  sht31.begin(0x44);
  
}

void start_sensor(){
  digitalWrite(tankPower,HIGH);
  delay(1);
  digitalWrite(tankPower,LOW);
}

void readTank(){

     float AvgRaw;
    float total = 0;
    int levelNumSamp_SP = 50;
    int levelNumSamp_PV = 0;
    int32_t reading = 0;

    
    int i = 0;
    
    for (i=0; i< levelNumSamp_SP; i++){
        reading = analogRead(tankPin);
        if (reading>25){
          total += reading;
          levelNumSamp_PV++;
        }
        delay(5);
    }

    // Calculate the Average
    // Partile input point is 0-4095 for 0-3.3 Volts. 
    // Maxbotix is ~3.2mV/cm
    // Counts * 3300 mv/1024 counts * 1 cm/3.2 mV * 1 inch/2.54 * Calibration Multi * 10 = Inches * 100
    if (levelNumSamp_PV > 0) {
      AvgRaw = total/levelNumSamp_PV;
    }
    else {
      AvgRaw = 0;
    }
    
    TankDist = (AvgRaw*3300/1024*1/3.2*1/2.54*100)/158.461538;
    Particle.publish("Average Raw", String(AvgRaw));
    snowDepth = setMeasure - TankDist;
    Particle.publish("Distance Measured", String(TankDist));

    //TankDist = 3.3 * (reading/3.22266);
}


 


    


void printall() {
     Particle.publish("depth", String(snowDepth));
     testFeed.send(snowDepth);
     //Particle.publish("PV", String(levelNumSamp_PV));
     temp = sht31.readTemperature();
     tempF = (temp * 1.8) + 32;
     Particle.publish("temp", String(tempF));
     tempFeed.send(tempF);
     humidity = sht31.readHumidity();
     Particle.publish("humidity", String(humidity));
     humFeed.send(humidity);
     
}

void loop () {
  start_sensor();
  readTank();
  printall();
  delay(600000); // This delay time changes by 100 for every sensor in the chain.  For 4 sensors this will be 400
}